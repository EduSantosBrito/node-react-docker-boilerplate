version: "3"
services: 
  node-react-docker-boilerplate-client:
    container_name: node-react-docker-boilerplate-client
    build: 
      context: ./client
      dockerfile: dev.Dockerfile
    restart: always
    environment: 
      NODE_ENV: development
      REACT_APP_PORT: 3000
      REACT_APP_HOST: 0.0.0.0
      REACT_APP_API_HOST: 0.0.0.0
      REACT_APP_API_PORT: 3001
    ports:
      - "50200:3000"
    depends_on:
      - node-react-docker-boilerplate-server
    networks:
      - node-react-docker-boilerplate-network
    volumes:
      - ./client:/usr/src/app
  node-react-docker-boilerplate-server: 
    container_name: node-react-docker-boilerplate-server
    build: 
      context: ./server
      dockerfile: dev.Dockerfile
    restart: always
    environment:
      NODE_ENV: development
      NODE_PORT: 3001
      NODE_HOST: 0.0.0.0
      MONGODB_PORT: 27017
      MONGODB_HOST: node-react-docker-boilerplate-mongo
      MONGODB_DATABASE: node-react-docker-boilerplate-database
    ports: 
      - "50210:3001"
    depends_on:
      - node-react-docker-boilerplate-mongo
    networks:
      - node-react-docker-boilerplate-network
    volumes:
      - ./server:/usr/src/server
  node-react-docker-boilerplate-mongo: 
    container_name: node-react-docker-boilerplate-mongo
    image: mongo
    restart: always
    environment:
      MONGODB_PORT: 27017
      MONGODB_HOST: 0.0.0.0
    volumes:
      - ./data:/data/db
    ports: 
      - "50220:27017"
    networks:
      - node-react-docker-boilerplate-network

networks: 
  node-react-docker-boilerplate-network:
    driver: bridge